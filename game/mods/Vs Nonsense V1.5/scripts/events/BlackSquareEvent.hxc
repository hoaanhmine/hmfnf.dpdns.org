import flixel.tweens.FlxTween;
import flixel.FlxCamera;
import flixel.tweens.FlxEase;
import funkin.util.FlxTweenUtil;
// Data from the chart
import funkin.Conductor;

import funkin.play.PlayState;

// Data from the event schema
import funkin.play.event.ScriptedSongEvent;

class BlackSquareEvent extends ScriptedSongEvent{
    static var DEFAULT_OPACITY:Float = 0.0;
    static var DEFAULT_DURATION:Float = 4.0;

    public function new(){
        super('BlackSquare');
    }

    public override function handleEvent(data):Void{
        if (PlayState.instance.currentStage == null || PlayState.instance.currentStage.getNamedProp("blacksquare") == null)
            return;

        
        var blackSquare = PlayState.instance.currentStage.getNamedProp('blacksquare');

        var opacity:Float = data.getFloat('opacity') ?? DEFAULT_OPACITY;
        var duration:Float = data.getFloat('duration') ?? DEFAULT_DURATION;

        if (duration <= 0.5){
            blackSquare.alpha = opacity;
            return;
        }

        var durSeconds = Conductor.instance.stepLengthMs * duration / 1000;
        FlxTween.tween(blackSquare, {alpha: opacity}, durSeconds,
        {
            ease: FlxEase.linear,
        });
    }
    

    public override function getTitle():String
    {
        return 'Nonsense Black Square';
    }

    public override function getEventSchema()
    {
        return([
        {
            name: 'opacity',
            title: 'Opacity Level',
            defaultValue: 0.0,
            step: 0.05,
            type: 'float'
        },
        {
            name: 'duration',
            title: 'Duration',
            defaultValue: 4.0,
            step: 0.5,
            type: 'float',
            units: 'steps'
        }]);
    }
}