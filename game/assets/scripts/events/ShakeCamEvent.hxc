import flixel.tweens.FlxTween;
import flixel.FlxCamera;
import flixel.tweens.FlxEase;
import flixel.FlxG;
// Data from the chart
import funkin.Conductor;

import funkin.play.PlayState;

// Data from the event schema
import funkin.play.event.ScriptedSongEvent;

class ShakeCamEvent extends ScriptedSongEvent{
    static var DEFAULT_SHAKE_INTENSITY:Float = 0.03;
    static var DEFAULT_ENDING_SHAKE_INTENSITY:Float = 0.0;
    static var DEFAULT_DURATION:Float = 4.0;

    public function new(){
        super('ShakeCam');
    }

    public override function handleEvent(data):Void{
        var duration:Float = data.getFloat('duration') ?? DEFAULT_DURATION;
        var shakeIntensity:Float = data.getFloat('intensity') ?? DEFAULT_SHAKE_INTENSITY;
        var endingIntensity:Float = data.getFloat('ending') ?? DEFAULT_ENDING_SHAKE_INTENSITY;
        var durSeconds = Conductor.instance.stepLengthMs * duration / 1000;
        
        FlxG.camera.shake(shakeIntensity, durSeconds, function(){
            if (endingIntensity <= 0.0) return;
            FlxG.camera.shake(endingIntensity, 1.0/0.0);
        });
    }

    public override function getTitle():String
    {
        return 'Shake Cam';
    }

    public override function getEventSchema()
    {
        return([
        {
            name: 'intensity',
            title: 'Intensity',
            defaultValue: 0.03,
            step: 0.005,
            type: 'float',
            units: 'x'
        },
        {
            name: 'duration',
            title: 'Duration',
            defaultValue: 4.0,
            step: 0.5,
            type: 'float',
            units: 'steps'
        },
        {
            name: 'ending',
            title: 'Ending Intensity',
            defaultValue: 0.0,
            step: 0.005,
            type: 'float',
            units: 'x'
        }
    ]);
    }
}
